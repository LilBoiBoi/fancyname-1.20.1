plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "SpongePowered"
		url = "https://repo.spongepowered.org/repository/maven-public/"
	}
	mavenCentral()
	maven { url "https://maven.fabricmc.net/" }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// Minecraft + Fabric setup
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mixin annotations
	annotationProcessor "org.spongepowered:mixin:0.8.5"

	// Gson (for JsonParseException)
	implementation "com.google.code.gson:gson:2.10.1"
	annotationProcessor "com.google.code.gson:gson:2.10.1"

	// Guava (for Maps and other Google Common utils)
	implementation "com.google.guava:guava:31.1-jre"
	annotationProcessor "com.google.guava:guava:31.1-jre"
	modImplementation "org.joml:joml:1.10.5"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// For publishing
	}
}
